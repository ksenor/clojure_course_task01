(ns task01.core
  (:require [pl.danieljanus.tagsoup :refer :all])
  (:gen-class))


(defn get-links [x]
" 1) Find all elements containing {:class \"r\"}.

Example:
[:h3 {:class \"r\"} [:a {:shape \"rect\", :class \"l\",
                         :href \"https://github.com/clojure/clojure\",
                         :onmousedown \"return rwt(this,'','','','4','AFQjCNFlSngH8Q4cB8TMqb710dD6ZkDSJg','','0CFYQFjAD','','',event)\"}
                     [:em {} \"clojure\"] \"/\" [:em {} \"clojure\"] \" Â· GitHub\"]]

   2) Extract href from the element :a.

The link from the example above is 'https://github.com/clojure/clojure'.

3) Return vector of all 10 links.

Example: ['https://github.com/clojure/clojure', 'http://clojure.com/', . . .]
"
  (let [data (parse x)]
    data))

(defn -main []
  (println (str "Found " (count (get-links)) " links!")))

(def data (get-links "clojure_google.html"))
(def pat #"\[\s*:h3\s*\{:class\s*\"r\"\s*}\s*\[\s*:a\s*\{:shape\s*\"rect\",\s*:class\s*\"l\"\s*,\s*(:href \"(https|http)://\S+\"),")
(re-find pat (apply str (flatten data)))